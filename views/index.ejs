<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<meta name="Author" content="">
	<meta name="Keywords" content="">
	<meta name="Description" content="">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
	<title>chat</title>
	<script src="https://cdn.socket.io/socket.io-1.3.7.js"></script>
	<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
	<link href="http://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" rel="stylesheet">
	<style type="text/css">
		html{
			-webkit-font-smoothing: antialiased;
			min-height: 100%;
		}
		body{
			width: 100%;
			height: 100%;
			margin: 0;
			font-family: "Spoqa Han Sans","맑은고딕","Malgun Gothic","Apple SD Gothic Neo","돋움",dotum,Arial,sans-serif;
			font-weight: 400;
			font-size: 14px;
			color: #333;
		}
		*{
			-webkit-box-sizing: border-box;
			-moz-box-sizing: border-box;
			box-sizing: border-box;
		}
		*:before, *:after {
			-webkit-box-sizing: border-box;
			-moz-box-sizing: border-box;
			box-sizing: border-box;
		}
		input, button, select, textarea {
			font-family: inherit;
			font-size: inherit;
			line-height: inherit;
			-webkit-box-shadow: none;
			-moz-box-shadow: none;
			box-shadow: none;
		}
		button, input, optgroup, select, textarea {
			margin: 0;
			font: inherit;
			color: inherit;
		}
		button:hover{
			cursor: pointer;
		}
		.room-wrapper{
			position: absolute;
			left: 0;
			top: 0;
			width: 320px;
			height: 100%;
			border-right: 1px solid #ddd;
			padding-top: 50px;
			z-index: 1000;
		}
		.room-list{
			margin-top: 0;
			list-style: none;
			padding-left: 0;
		}
		.room-list > li{
			padding: 20px 15px;
			cursor: pointer;
		}
		.room-list > li:hover{
			background-color: #f4f4f4;
		}
		.room-list > li.active{
			background-color: #f4f4f4;
		}
		.room-wrapper > .room-header{
			position: absolute;
			top: 0;
			height: 50px;
			width: 100%;
			border-bottom: 1px solid #ECECEC;
			text-align: center;
		}
		.room-wrapper > .room-header > h1{
			font-size: 16px;
			color: #474A4C;
		}
		.room-wrapper > .room-header > button{
			position: absolute;
			border: 0;
			padding: 5px;
			background: #fff;
			outline: none;
		}
		.room-wrapper > .room-header > button > i:before{
			font-size: 28px;
			color: #0084ff;
		}
		.message-wrapper{
			position: absolute;
			width: 100%;
			height: 100%;
			padding-left: 340px;
			display: table;
			z-index: 999;
		}
		.message-inner{
			display: table-cell;
			vertical-align: middle;
			color: #C5C6C7;
			font-size: 25px;
			text-align: center;
		}
		.chat-wrapper{
			width: auto;
			height: 100%;
			padding-left: 330px;
			padding-right: 200px;
		}
		#chat{
			overflow-x: hidden;
			overflow-y: auto;
			padding-top: 20px;
		}
		.message-write-form{
			position: absolute;
			bottom: 0;
			left: 0;
			width: 100%;
		}
		.message-write-wrapper{
			padding-left: 320px;
			padding-right: 200px;
		}
		.message-write-inner{
			position: relative;
			padding: 15px;
			border-top: 1px solid #ECECEC;
		}
		.message-write-inner > input{
			height: auto;
			font-size: 14px;
			border: 0;
			font-size: 15px;
			outline: none;
			width: 100%;
			padding-right: 35px;
		}
		.message-write-inner > .image-upload{
			position: absolute;
			top: 12px;
			right: 13px;
			cursor: pointer;
			overflow: hidden;
		}
		.message-write-inner > .image-upload > i:before{
			color: #C5C5C5;
			font-size: 28px;
		}
		.message-write-inner > .image-upload > input{
			position: absolute;
			top: 0;
			right: 0;
			margin: 0;
			opacity: 0;
			-ms-filter: 'alpha(opacity=0)';
			font-size: 200px !important;
			direction: ltr;
			cursor: pointer;
		}
		.user-wrapper{
			position: absolute;
			top: 0;
			right: 0;
			width: 200px;
			height: 100%;
			border-left: 1px solid #ddd;
		}
		.user-list{
			list-style: none;
			padding-left: 0;
			margin-top: 0;
		}
		.user-list > li{
			padding: 15px 15px 15px 66px;
			color: #474A4C;
			position: relative;
		}
		.user-list > li > img{
			width: 40px;
			height: 40px;
			border-radius: 50%;
			position: absolute;
			left: 15px;
			top: 7px;
		}


		.nickname-input-wrap{
			position: fixed;
			z-index: 9999;
			background-color: #fff;
			display: table;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
		}
		.nickname-input-inner{
			display: table-cell;
			vertical-align: middle;
			text-align: center;
		}
		.nickname-input-inner input{
			border: 1px solid rgba(0, 0, 0, .20);
			color: rgba(0, 0, 0, 1);
			font-size: 17px;
			height: 42px;
			padding: 0 16px;
			width: 245px;
			border-radius: 4px;
			outline: none;
		}
		.nickname-input-inner input:focus{
			border: 1px solid #0084ff;
		}

		.notify-message{
			padding: 15px 0;
			color: #7B7E80;
		}
		.message{
			display: block;
			max-width: 65%;
			margin-bottom: 30px;
			position: relative;
			padding: 10px 10px;
			background-color: #fff;
			border-radius: 11px;
			-webkit-transition: -webkit-transform .3s ease-out;
			-moz-transition: -moz-transform .3s ease-out;
			-o-transition: -o-transform .3s ease-out;
			transition: transform .3s ease-out;
		}
		.message-image{
			display: block;
			max-width: 25%;
			position: relative;
			margin-bottom: 30px;
		}
		.message-image.left{
			float: left;
			margin-left: 7px;
			margin-top: 15px;
		}
		.message-image.right {
			float: right;
			margin-right: 15px;
			margin-top: 10px;
		}
		.message-image img{
			width: 100%;
			height: auto;
		}
		.message.on{
			transform: scale(.75);
			-webkit-transform: scale(.75);
			opacity: 0;
		}
		.message-username{
			position: absolute;
			top: -22px;
			left: 2px;
			font-weight: bold;
			white-space: nowrap;
		}
		.message.right {
			float: right;
			margin-right: 15px;
			margin-top: 10px;
			background-color: #047DFF;
			color: #fff;
		}
		.message.left {
			float: left;
			margin-left: 7px;
			margin-top: 15px;
			background-color: #E5E5EA;
			color: #000;
		}
		.message.left:after{
			position: absolute;
			content: " ";
			top: 5px;
			left: -8px;
			width: 0;
			height: 0;
			border-top: 15px solid #E5E5EA;
			border-left: 15px solid transparent;
		}
		.message.right:after{
			position: absolute;
			content: " ";
			top: 17px;
			right: -8px;
			width: 0;
			height: 0;
			border-bottom: 15px solid #047DFF;
			border-right: 15px solid transparent;
		}
		.message-line{
			clear: both;
		}

	</style>
</head>
<body>
	<div class="nickname-input-wrap" id="nicknameForm">
		<div class="nickname-input-inner">
			<input type="text" placeholder="이름" id="nickname" onkeydown='if(event.which == 13){ nicknameInit() }'><br>
			<button type="button" onclick="nicknameInit()" style="margin-top:15px;color:#0084ff;border:0;outline:none;font-size:20px;background:#fff;">확인</button>
		</div>
	</div>
	
	<div class="room-wrapper">
		<div class="room-header">
			<button type="button" onclick="" style="top:5px;left:5px;" title="설정"><i class="ion-ios-gear-outline"></i></button>
			<h1>대화방</h1>
			<button type="button" onclick="createRoomBtn()" style="top:5px;right:5px;" title="대화방 새로만들기"><i class="ion-ios-plus-outline"></i></button>
		</div>
		<ul id="roomList" class="room-list">
			
		</ul>
	</div>
	<div class="message-wrapper">
		<div class="message-inner">
			대화방을 선택해 주세요
		</div>
	</div>
	<div class="chat-wrapper" style="display:none">
		<div id="chat">
		
		</div>
		<div class="message-write-form">
			<div class="message-write-wrapper">
				<div class="message-write-inner">
					<input type="text" id="msgbox" placeholder="메시지를 입력하세요...">
					<span class="image-upload">
						<i class="ion-image"></i>
						<input type="file"accept="image/*" id="imageUpload">
					</span>
				</div>
			</div>
		</div>
	</div>
	<div class="user-wrapper" style="display:none">
		<ul id="userList" class="user-list"></ul>
	</div>
	
	
	<script type="text/javascript">
		var nickname;
		var currRoomUrl;
		
		$("#msgbox").keyup(function(event) {
			if (event.which == 13) {
				if($("#msgbox").val() != "") {
					socket.emit('send_msg', {msg: $('#msgbox').val()});
					$('#msgbox').val('');
				}
			}
		});

		var socket = io();

		socket.emit('load_room');

		socket.on('list_room',function(data){
			$("#roomList").empty();
			for(var i=0; i < data.rooms.length ; i++){
				$("#roomList").prepend("<li data-url='"+data.rooms[i].url+"'>"+data.rooms[i].title+"</li>");
			}
			if(currRoomUrl != undefined){
				$("#roomList").find("[data-url='"+currRoomUrl+"']").addClass("active");
			}
		});

		socket.on('userlist',function(data){
			console.log(data);
			$("#userList").empty();
			for(var i=0; i < data.users.length ; i++){
				$("#userList").append("<li><img src='https://scontent.xx.fbcdn.net/hprofile-xfa1/v/t1.0-1/c15.0.50.50/p50x50/10354686_10150004552801856_220367501106153455_n.jpg?oh=de3cf921c79d63ac0e908353690899f6&oe=5785D22F'>"+data.users[i]+"</li>");
			}
		});

		socket.on('broadcast_msg',function(data){
			if(data.type == "notify"){
				var $message = $("<div class='notify-message'>"+data.msg+"</div>")
				$("#chat").append($message);
				setTimeout(function(){
					$message.fadeOut();
				},5000);
			}else if(data.type == "message"){
				var $message
				if(nickname == data.username){
					$message = $("<div class='message right on'>"+data.msg+"</div><div class='message-line'></div>");
				}else{
					$message = $("<div class='message left on'><div class='message-username'>"+data.username+"</div>"+data.msg+"</div><div class='message-line'></div>");
			}
				$("#chat").append($message);
				setTimeout(function(){
					$("#chat").scrollTop($("#chat").prop("scrollHeight"));
					$message.removeClass("on");
				},200);
			}else{
				if(nickname == data.username){
					$("#chat").append("<div class='message-image right'><a href='"+data.msg+"' target='_blank'><img src='"+data.msg+"'></a></div><div class='message-line'></div>");
				}else{
					$("#chat").append("<div class='message-image left'><div class='message-username'>"+data.username+"</div><a href='"+data.msg+"' target='_blank'><img src='"+data.msg+"'></a></div><div class='message-line'></div>");
				}
			}

		});

		function createRoomBtn(){
			if($("#roomList").children(".create").length == 0){
				$el = $("<li class='active create'><input type='text' placeholder='새로운 대화방' style='border:0;background-color:#f4f4f4;outline:none;width:100%;' onkeydown='if (event.which == 13){ createRoom(this); }'></li>");
				$("#roomList").prepend($el);
				$el.children("input").focus();
			}
			
		}

		function createRoom(el){
			if(el.value != ""){
				$("#chat").empty();
				$("#roomList").children(".create").remove();
				var url = makeid();
				currRoomUrl = url;
				socket.emit('create_room',{'title':el.value,'url':url});

				setTimeout(function(){
					socket.emit('join_room',{nickname:nickname,url:url});
					$(".message-wrapper").hide();
					$(".chat-wrapper").show();
					$(".user-wrapper").show();
					$("#chat").empty();
				},200);
			}
			
		}

		function makeid(){
			var text = "";
			var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
			for( var i=0; i < 6; i++ ) text += possible.charAt(Math.floor(Math.random() * possible.length));

			return text;
		}

		function nicknameInit(){
			if($("#nickname").val() != ""){
				nickname = $("#nickname").val();
				socket.emit('nickname_init',{'nickname':nickname});
				$("#nicknameForm").fadeOut();
			}
		}

		$(document).on("click", "#roomList > li", function(){
			if($(this).hasClass("active")){
				return false;
			}
			if($("#roomList").children(".create").length > 0){
				$("#roomList").children(".create").remove();
			}
			console.log($(this).data("url"));
			if($(this).data("url") != undefined){
				currRoomUrl = $(this).data("url");
				$("#chat").empty();
				$("#roomList").children("li").removeClass("active");
				$(this).addClass("active");
				socket.emit('join_room',{nickname:nickname,url:$(this).data("url")});
				$(".message-wrapper").hide();
				$(".chat-wrapper").show();
				$(".user-wrapper").show();
			}
		});

		$(function(){
			$("#chat").css("height",$(document).height()-58);

			$("#imageUpload").change(function(e){
				var file = e.originalEvent.target.files[0],
				reader = new FileReader();

				console.log(file);
				reader.onload = function(evt){
					socket.emit('image_upload',{baseurl:evt.target.result});
				}
				reader.readAsDataURL(file);
			});
		});
	</script>
</body>
</html>